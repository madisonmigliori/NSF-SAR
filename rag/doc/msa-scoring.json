{
  "optimization_metrics": [
    {
      "category": ["Scalability"],
      "description": "Scaling individual components independently improves efficiency and response to demand.",
      "weight": 0.34,
      "sub_metrics": [
        {
          "name": "Horizontal Scalability",
          "description": "Ability to scale services out by replicating instances.",
          "weight": 0.5,
          "score_guide": {
            "0-20": "No scaling; static resources.",
            "21-50": "Basic replication; manual scaling.",
            "51-80": "Automated scaling via orchestrator.",
            "81-100": "Auto-scaling based on real-time demand and usage metrics."
          }
        },
        {
          "name": "Independent Service Scaling",
          "description": "Services can scale individually without affecting others.",
          "weight": 0.5,
          "score_guide": {
            "0-20": "Services are tightly coupled.",
            "21-50": "Some services are isolated, but dependencies still limit scaling.",
            "51-80": "Most services scale independently.",
            "81-100": "All services are designed and deployed independently for scaling."
          }
        }
      ]
    },
    {
      "category": ["Agility", "Autonomy"],
      "description": "Support for independent development, CI/CD, and fast feature delivery.",
      "score": "/100",
      "weight": 0.33,
      "sub_metrics": [
        {
          "name": "Independent Deployment",
          "description": "Can teams deploy services without coordination?",
          "weight": 0.4,
          "score_guide": {
            "0-20": "Centralized release; full-system deployments.",
            "21-50": "Limited autonomy; cross-team dependencies.",
            "51-80": "Most services deploy independently.",
            "81-100": "Fully decoupled deployment pipelines per service."
          }
        },
        {
          "name": "CI/CD Maturity",
          "description": "Degree of automation in building, testing, and deploying services.",
          "weight": 0.3,
          "score_guide": {
            "0-20": "Manual builds and deploys.",
            "21-50": "Partial CI; testing or build automation only.",
            "51-80": "CI/CD pipelines with human oversight.",
            "81-100": "Fully automated CI/CD with rollback and quality gates."
          }
        },
        {
          "name": "Team Autonomy",
          "description": "How independently can teams work on services?",
          "weight": 0.3,
          "score_guide": {
            "0-20": "Centralized code ownership.",
            "21-50": "Teams work on shared services.",
            "51-80": "Teams own and manage specific services.",
            "81-100": "End-to-end ownership per team: build, deploy, monitor."
          }
        }
      ]
    },
    {
      "category": ["Fault Tolerance"],
      "description": "Ability to isolate and recover from failures.",
      "weight": 0.33,
      "sub_metrics": [
        {
          "name": "Service Isolation",
          "description": "Failure in one service does not propagate to others.",
          "weight": 0.4,
          "score_guide": {
            "0-20": "One failure brings down the whole system.",
            "21-50": "Partial containment with risk of cascading failure.",
            "51-80": "Most services isolated; occasional risk.",
            "81-100": "Complete failure containment through design and tooling."
          }
        },
        {
          "name": "Failure Recovery Mechanisms",
          "description": "Support for retries, timeouts, fallbacks.",
          "weight": 0.3,
          "score_guide": {
            "0-20": "No failure recovery built in.",
            "21-50": "Basic retries or error handling.",
            "51-80": "Timeouts and fallback logic in critical paths.",
            "81-100": "All services use patterns like circuit breakers, bulkheads, retries."
          }
        },
        {
          "name": "Monitoring and Alerting",
          "description": "Real-time observability to detect and act on failures.",
          "weight": 0.3,
          "score_guide": {
            "0-20": "No monitoring in place.",
            "21-50": "Ad hoc logging, limited alerting.",
            "51-80": "Monitoring and alerting set up on key services.",
            "81-100": "Proactive monitoring and automated alert response across all services."
          }
        }
      ]
    }
  ]
}